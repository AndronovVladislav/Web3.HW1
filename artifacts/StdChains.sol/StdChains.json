{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"StdChains provides information about EVM compatible chains that can be used in scripts/tests. For each chain, the chain's name, chain ID, and a default RPC URL are provided. Chains are identified by their alias, which is the same as the alias in the `[rpc_endpoints]` section of the `foundry.toml` file. For best UX, ensure the alias in the `foundry.toml` file match the alias used in this contract, which can be found as the first argument to the `setChainWithDefaultRpcUrl` call in the `initializeStdChains` function. There are two main ways to use this contract:   1. Set a chain with `setChain(string memory chainAlias, ChainData memory chain)` or      `setChain(string memory chainAlias, Chain memory chain)`   2. Get a chain with `getChain(string memory chainAlias)` or `getChain(uint256 chainId)`. The first time either of those are used, chains are initialized with the default set of RPC URLs. This is done in `initializeStdChains`, which uses `setChainWithDefaultRpcUrl`. Defaults are recorded in `defaultRpcUrls`. The `setChain` function is straightforward, and it simply saves off the given chain data. The `getChain` methods use `getChainWithUpdatedRpcUrl` to return a chain. For example, let's say we want to retrieve the RPC URL for `mainnet`:   - If you have specified data with `setChain`, it will return that.   - If you have configured a mainnet RPC URL in `foundry.toml`, it will return the URL, provided it     is valid (e.g. a URL is specified, or an environment variable is given and exists).   - If neither of the above conditions is met, the default data is returned. Summarizing the above, the prioritization hierarchy is `setChain` -> `foundry.toml` -> environment variable -> defaults.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/StdChains.sol\":\"StdChains\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=dependencies/openzeppelin-contracts/\",\":@openzeppelin/contracts/=dependencies/openzeppelin-contracts/contracts/\",\":ds-test/=dependencies/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=dependencies/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std-1.9.3/=dependencies/forge-std-1.9.3/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=dependencies/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x7dd11ac4db798fa196e00a0cfa288ce984acac881f1f34de03fe3187deed58de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c15fb03d5545e2d8d3948661596410edec5ec278a73988914b14a05d0d54557\",\"dweb:/ipfs/QmWGjkLgp4wSrTrFxF8cmhghaXQp5VyXYQvWE1DUTPL4rG\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4cf4fbccf5c3f6e5e022d511cc67cce4fb93ce335106a7ee52b4034ad5dae99a\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0114018f4670c22ed000dec83d8dc26e483ba323e5e58c4e99af568919fbeb81\",\"dweb:/ipfs/QmY13eZqF2P8dSZbPZNwG7nE8LsqdUrnZXNiZ8g9h96q2v\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=dependencies/openzeppelin-contracts/","@openzeppelin/contracts/=dependencies/openzeppelin-contracts/contracts/","ds-test/=dependencies/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/","erc4626-tests/=dependencies/openzeppelin-contracts/lib/erc4626-tests/","forge-std-1.9.3/=dependencies/forge-std-1.9.3/","forge-std/=lib/forge-std/src/","openzeppelin-contracts/=dependencies/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/StdChains.sol":"StdChains"},"evmVersion":"paris","libraries":{}},"sources":{"lib/forge-std/src/StdChains.sol":{"keccak256":"0x7dd11ac4db798fa196e00a0cfa288ce984acac881f1f34de03fe3187deed58de","urls":["bzz-raw://2c15fb03d5545e2d8d3948661596410edec5ec278a73988914b14a05d0d54557","dweb:/ipfs/QmWGjkLgp4wSrTrFxF8cmhghaXQp5VyXYQvWE1DUTPL4rG"],"license":"MIT"},"lib/forge-std/src/Vm.sol":{"keccak256":"0x4cf4fbccf5c3f6e5e022d511cc67cce4fb93ce335106a7ee52b4034ad5dae99a","urls":["bzz-raw://0114018f4670c22ed000dec83d8dc26e483ba323e5e58c4e99af568919fbeb81","dweb:/ipfs/QmY13eZqF2P8dSZbPZNwG7nE8LsqdUrnZXNiZ8g9h96q2v"],"license":"MIT OR Apache-2.0"}},"version":1},"storageLayout":{"storage":[{"astId":8508,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"stdChainsInitialized","offset":0,"slot":"0","type":"t_bool"},{"astId":8529,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"chains","offset":0,"slot":"1","type":"t_mapping(t_string_memory_ptr,t_struct(Chain)8524_storage)"},{"astId":8533,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"defaultRpcUrls","offset":0,"slot":"2","type":"t_mapping(t_string_memory_ptr,t_string_storage)"},{"astId":8537,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"idToAlias","offset":0,"slot":"3","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":8540,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"fallbackToDefaultRpcUrls","offset":0,"slot":"4","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_string_memory_ptr,t_string_storage)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_string_memory_ptr,t_struct(Chain)8524_storage)":{"encoding":"mapping","key":"t_string_memory_ptr","label":"mapping(string => struct StdChains.Chain)","numberOfBytes":"32","value":"t_struct(Chain)8524_storage"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_memory_ptr":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Chain)8524_storage":{"encoding":"inplace","label":"struct StdChains.Chain","numberOfBytes":"128","members":[{"astId":8517,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":8519,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"chainId","offset":0,"slot":"1","type":"t_uint256"},{"astId":8521,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"chainAlias","offset":0,"slot":"2","type":"t_string_storage"},{"astId":8523,"contract":"lib/forge-std/src/StdChains.sol:StdChains","label":"rpcUrl","offset":0,"slot":"3","type":"t_string_storage"}]},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"id":32}